{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        
        "newStorageAccount": {
            "type": "string",
            "metadata": {
                "description": "Globally unique lowercase name of your storage account"
            }
        },
        "storageAccountType": {
            "type": "string",
	    "metadata": {
		"description": "The type of the Storage Account created"
	    },
	    "defaultValue":"Standard_LRS"
	},
        "storageAccountNewOrExisting" : {
            "type": "string",
            "defaultValue" : "new",
            "allowedValues" : [
                "new",
                "existing"
            ],
            "metadata": {
                "Description": "Indicates whether the Storage Account is new or existing"
            }
        },
        "existingStorageAccountRG": {
            "type": "string",
            "defaultValue" : "",
            "metadata": {
               "description": "Storage Resource Group of the Existing VM."
            }
        },
            "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name of VM-Series VM in the Azure portal"
            }
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                "description": "Username for VM-Series administrator"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for VM-Series administrator"
            }
        },
        "authenticationType": {
            "type": "string",
            "metadata": {
                "descritpion": "Type of authentication "
            },
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "defaultValue": "password"
        },
        "sshKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSH RSA public key file as a string."
            }
        },
        "imageVersion": {
            "type": "string",
            "defaultValue": "latest",
          "allowedValues": [
            "latest",
            "7.1.1",
            "8.0.0"
          ],
            "metadata": {
                "description": "PAN-OS version."
            }
        }, 
        "imageSku": {
            "type": "string",
            "defaultValue": "byol",
            "allowedValues": [
                "byol",
		"bundle1",
		"bundle2"
            ],
            "metadata": {
                "description": "VM-Series model: BYOL or hourly pay-as-you-go (PAYG): Bundle 1 or Bundle 2"
            }
        }, 
        "vmSize": {
            "type": "string",
            "allowedValues": [
                "Standard_D3",
		"Standard_D3_v2",
                "Standard_D4", 
		"Standard_D4_v2",
		"Standard_D5",
		"Standard_D5_v2",
                "Standard_A4"	    
            ],
            "metadata": {
                "description": "Azure VM size for VM-Series"
            }
        },
	"availabilitySetName": {
            "type": "string",
	    "defaultValue": "VMSeriesFwAvSet",
            "metadata": {
                "description": "Azure Availability Set for VM-Series firewalls"
            }
        },
        
      "virtualNetworkName": {
        "type": "string",
        "metadata": {
          "description": "Name of the virtual network that the consumer wants to use"
        },
        "defaultValue": "panVnet"
      },
      "virtualNetworkResourceGroup": {
        "type": "string"
      },
      
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "192.168.0.0/16",
      "metadata": {
        "description": "Virtual network address CIDR"
      }
    },
    "subnet0Name": {
      "type": "string",
      "defaultValue": "Mgmt",
      "metadata": {
        "description": "Subnet for the Mgmt"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "Untrust",
      "metadata": {
        "description": "Subnet for the Untrust"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "Trust",
      "metadata": {
        "description": "Subnet for the Trust"
      }
    },
    "subnet0Prefix": {
      "type": "string",
      "defaultValue": "192.168.0.0/24",
      "metadata": {
        "description": "Mgmt subnet CIDR"
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "192.168.1.0/24",
      "metadata": {
        "description": "Untrust subnet CIDR"
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "192.168.2.0/24",
      "metadata": {
        "description": "Trust subnet CIDR"
      }
    },
    "subnet0StartAddress": {
      "type": "string",
      "defaultValue": "192.168.0.4",
      "metadata": {
        "description": "Mgmt subnet start address"
      }
    },
    "subnet1StartAddress": {
      "type": "string",
      "defaultValue": "192.168.1.4",
      "metadata": {
        "description": "Untrust subnet start address"
      }
    },
    "subnet2StartAddress": {
      "type": "string",
      "defaultValue": "192.168.2.4",
      "metadata": {
        "description": "Trust subnet start address"
      }
    }
    },
  "variables": {
    "apiVersion": "2017-12-01",
    "imagePublisher": "paloaltonetworks",
    "baseUrl": "https://raw.githubusercontent.com/wvanbesien/PaloAlto/master/PaloAlto",
    "imageOffer": "vmseries1",
    "fwpublicIPName": "[concat(parameters('vmName'), '-fwMgmtPublicIP')]",
    "nicName": "[concat(parameters('vmName'), '-eth')]",
    "FWPrivateIPAddressUntrust": "[parameters('subnet1StartAddress')]",
    "FWPrivateIPAddressTrust": "[parameters('subnet2StartAddress')]",
    "publicIPAddressType": "Dynamic",
    "vnetID": "[resourceId(parameters('virtualNetworkResourceGroup'),concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName'))]",

    "nsgname-mgmt": "[concat(parameters('vmName'), '-DefaultNSG')]",
    "Nic1Name": "[concat(parameters('vmName'),'-NIC-01')]",
    "Nic2Name": "[concat(parameters('vmName'),'-NIC-02')]",
    "Nic3Name": "[concat(parameters('vmName'),'-NIC-03')]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
    "subnet3Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet2Name'))]",
    "storageAccountSetupURL": "[concat(variables('baseUrl'),'/storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]",
    "vmTemplateUrl": "[concat(variables('baseUrl'), '/virtual-machine-', parameters('authenticationType'),'.json')]"
  },
    "resources": [
    {
	"name": "storageAcountSetup1",
	"type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
	"properties" : {
		"mode": "Incremental",
		"templateLink" : {
		"uri" : "[variables('storageAccountSetupURL')]",
		"contentVersion": "1.0.0.0"
	},
	"parameters" : {
    "location": {
      "value": "[resourceGroup().location]"
    },
		"storageAccountType": {
			"value": "[parameters('storageAccountType')]"
		},
		"newStorageAccount" : {
			"value": "[parameters('newStorageAccount')]"
		},
		"storageAccountExistingRG": {
			"value": "[parameters('existingStorageAccountRG')]"
		}
	  }
        }
    },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySetName')]",
      "location": "[resourceGroup().location]"
    },
      {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('Nic1Name')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [

        ],
        "tags": {

        },
        "properties": {
          "ipConfigurations": [
            {
              "name": "[concat('ipconfig', '0')]",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('subnet1Ref')]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('Nic2Name')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [

        ],
        "tags": {

        },
        "properties": {
          "enableIPForwarding": true,
          "ipConfigurations": [
            {
              "name": "[concat('ipconfig', '1')]",
              "properties": {
                "privateIPAllocationMethod": "Static",
                "privateIPAddress": "[variables('FWPrivateIPAddressUntrust')]",
                "subnet": {
                  "id": "[variables('subnet2Ref')]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('Nic3Name')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [

        ],
        "tags": {

        },
        "properties": {
          "enableIPForwarding": true,
          "ipConfigurations": [
            {
              "name": "[concat('ipconfig', '2')]",
              "properties": {
                "privateIPAllocationMethod": "Static",
                "privateIPAddress": "[variables('FWPrivateIPAddressTrust')]",
                "subnet": {
                  "id": "[variables('subnet3Ref')]"
                }
              }
            }
          ]
        }
      },
    {
      "name": "PAN-VM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
         "storageAcountSetup1",
         "[concat('Microsoft.Network/networkInterfaces/', variables('Nic1Name'))]",
         "[concat('Microsoft.Network/networkInterfaces/', variables('Nic2Name'))]",
         "[concat('Microsoft.Network/networkInterfaces/', variables('nic3Name'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "imageSku": {
            "value": "[parameters('imageSku')]"
          },
          "imageOffer": {
            "value": "[variables('imageOffer')]"
          },
          "imageVersion": {
            "value": "[parameters('imageVersion')]"
          },
          "imagePublisher": {
            "value": "[variables('imagePublisher')]"
          },
          "nic1Name": {
            "value": "[variables('nic1Name')]"
          },
          "nic2Name": {
            "value": "[variables('nic2Name')]"
          },
          "nic3Name": {
            "value": "[variables('nic3Name')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "adminUserName": {
            "value": "[parameters('adminUserName')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "newStorageAccount": {
            "value": "[parameters('newStorageAccount')]"
          },
          "sshKey": {
            "value": "[parameters('sshKey')]"
          },
          "availabilitySetName": {
            "value": "[parameters('availabilitySetName')]"
          }
        }
      }
    }
  ]
}
